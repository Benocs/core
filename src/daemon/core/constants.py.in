# Constants created by autoconf ./configure script
COREDPY_VERSION		= "@COREDPY_VERSION@"
CORE_STATE_DIR		= "@CORE_STATE_DIR@"
CORE_CONF_DIR		= "@CORE_CONF_DIR@"
CORE_DATA_DIR		= "@CORE_DATA_DIR@"
CORE_LIB_DIR		= "@CORE_LIB_DIR@"
CORE_SBIN_DIR		= "@SBINDIR@"

BRCTL_BIN               = "@brctl_path@/brctl"
SYSCTL_BIN              = "@sysctl_path@/sysctl"
IP_BIN                  = "@ip_path@/ip"
TC_BIN                  = "@tc_path@/tc"
EBTABLES_BIN            = "@ebtables_path@/ebtables"
IFCONFIG_BIN            = "@ifconfig_path@/ifconfig"
NGCTL_BIN               = "@ngctl_path@/ngctl"
VIMAGE_BIN              = "@vimage_path@/vimage"
QUAGGA_STATE_DIR        = "@CORE_STATE_DIR@/run/quagga"
MOUNT_BIN               = "@mount_path@/mount"
UMOUNT_BIN              = "@umount_path@/umount"
# TODO: make UNIONFS_BIN dynamic
#UNIONFS_BIN             = "@unionfs_path@/unionfs-fuse"
UNIONFS_BIN             = "/usr/bin/unionfs-fuse"

config_files = ['ipaddrs.conf']

CONFIGS = {}
from os.path import exists, expanduser, join
# since this is the core-daemon, user should always expand to /root/
home = expanduser('~')
dotcore = join(home, '.core')
for configfile in config_files:
    fullpath = join(dotcore, configfile)
    configname = configfile[:configfile.rfind('.conf')]
    if exists(fullpath):
        localconfig = {}
        with open(fullpath, 'r') as f:
            for line in f:
                try:
                    key_value = line.split('=')
                    if not len(key_value) == 2:
                        print('ERROR: could not read line: %s' % line)
                        continue

                    key = key_value[0].replace('"', '').replace("'", "").strip()
                    value = key_value[1].replace('"', '').replace("'", "").strip()

                    #print('new config: %s, %s = %s' % (configname, key, value))
                    localconfig[key] = value
                except:
                    print('ERROR: could not read line: %s' % line)
        if len(localconfig) > 0:
            CONFIGS[configname] = localconfig

